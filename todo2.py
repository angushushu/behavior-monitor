# Form implementation generated from reading ui file 'todo2.ui'
#
# Created by: PyQt6 UI code generator 6.4.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.


from PySide6 import QtCore, QtGui, QtWidgets
from PySide6.QtWidgets import QMessageBox
import sqlite3

# Create a database/connect to one
conn = sqlite3.connect('list.db')
# Create a cursor
c = conn.cursor()
# Create table todo_list w/ coln list_item
c.execute("""CREATE TABLE if not exists todo_list(
    list_item text)
    """)
# Commit the changes
conn.commit()
conn.close()

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(391, 393)
        self.centralwidget = QtWidgets.QWidget(parent=MainWindow)
        self.centralwidget.setObjectName("centralwidget")

        self.task_edit = QtWidgets.QLineEdit(parent=self.centralwidget)
        self.task_edit.setGeometry(QtCore.QRect(20, 20, 351, 22))
        self.task_edit.setObjectName("task_edit")
        self.task_list = QtWidgets.QListWidget(parent=self.centralwidget)
        self.task_list.setGeometry(QtCore.QRect(20, 90, 351, 261))
        self.task_list.setObjectName("task_list")
        self.add_btn = QtWidgets.QPushButton(parent=self.centralwidget, clicked=self.add_it)
        self.add_btn.setGeometry(QtCore.QRect(20, 50, 81, 24))
        self.add_btn.setObjectName("add_btn")
        self.clear_btn = QtWidgets.QPushButton(parent=self.centralwidget, clicked=self.clear_it)
        self.clear_btn.setGeometry(QtCore.QRect(200, 50, 81, 24))
        self.clear_btn.setObjectName("clear_btn")
        self.remove_btn = QtWidgets.QPushButton(parent=self.centralwidget, clicked=self.remove_it)
        self.remove_btn.setGeometry(QtCore.QRect(110, 50, 81, 24))
        self.remove_btn.setObjectName("remove_btn")
        self.save_btn = QtWidgets.QPushButton(parent=self.centralwidget, clicked=self.save_it)
        self.save_btn.setGeometry(QtCore.QRect(290, 50, 81, 24))
        self.save_btn.setObjectName("save_btn")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(parent=MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 391, 22))


        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(parent=MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

        # Grab all item from db
        self.grab_all()

    # Grab all item form db
    def grab_all(self, selected):
        # Create a database/connect to one
        conn = sqlite3.connect('list.db')
        # Create a cursor
        c = conn.cursor()

        c.execute("SELECT * FROM todo_list")
        records = c.fetchall()

        # Commit the changes
        conn.commit()
        conn.close()

        for r in records:
            self.task_list.addItem(str(r[0]))
    # Add todo
    def add_it(self):
        todo = self.task_edit.text()
        self.task_list.addItem(todo)
        self.task_edit.clear()
    # Remove todo
    def remove_it(self):
        selected = self.task_list.currentRow()
        # self.task_edit.setText(str(selected))
        self.task_list.takeItem(selected)
    # Clear all
    def clear_it(self):
        self.task_list.clear()
    # Save to db
    def save_it(self):
        conn = sqlite3.connect('list.db')
        c = conn.cursor()
        # Clear db table
        c.execute("DELETE FROM todo_list;",)
        todos = []
        for i in range(self.task_list.count()):
            # todos.append(self.task_list.item(i).text())
            c.execute("INSERT INTO todo_list VALUES (:item)",
                      {
                          'item': self.task_list.item(i).text()
                      })
        print(todos)

        conn.commit()
        conn.close()
        msg = QMessageBox()
        msg.setWindowTitle("内容已保存")
        msg.setText("列表已录入数据库")
        msg.setIcon(QMessageBox.Information)
        x = msg.exec()

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "BhvMonitor"))
        self.remove_btn.setText(_translate("MainWindow", "Remove"))
        self.add_btn.setText(_translate("MainWindow", "Add"))
        self.clear_btn.setText(_translate("MainWindow", "Clear"))
        self.save_btn.setText(_translate("MainWindow", "Save"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec())
